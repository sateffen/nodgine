{
    "project": {
        "name": "nodgine",
        "description": "The nodgine is a small framework for creating fast webservices. The main focuses are speed and easiness.",
        "version": "0.2.0"
    },
    "files": {
        "dist\\Controller\\Application.js": {
            "name": "dist\\Controller\\Application.js",
            "modules": {
                "$APPLICATION": 1
            },
            "classes": {
                "$APPLICATION": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "dist\\Controller\\Logger.js": {
            "name": "dist\\Controller\\Logger.js",
            "modules": {
                "$LOGGER": 1
            },
            "classes": {
                "$LOGGER": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "dist\\Controller\\Router.js": {
            "name": "dist\\Controller\\Router.js",
            "modules": {
                "$ROUTER": 1
            },
            "classes": {
                "$ROUTER": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "dist\\Controller\\Service.js": {
            "name": "dist\\Controller\\Service.js",
            "modules": {
                "$SERVICE": 1
            },
            "classes": {
                "$SERVICE": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "dist\\bootstrap.js": {
            "name": "dist\\bootstrap.js",
            "modules": {
                "nodgine": 1
            },
            "classes": {
                "nodgine": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "nodgine": {
            "name": "nodgine",
            "submodules": {
                "$APPLICATION": 1,
                "$LOGGER": 1,
                "$ROUTER": 1,
                "$SERVICE": 1
            },
            "classes": {
                "$APPLICATION": 1,
                "$LOGGER": 1,
                "$ROUTER": 1,
                "$SERVICE": 1,
                "nodgine": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "dist\\bootstrap.js",
            "line": 1,
            "description": "This is the bootstrap for the nodgine module",
            "itemtype": "main",
            "static": 1
        },
        "$APPLICATION": {
            "name": "$APPLICATION",
            "submodules": {},
            "classes": {
                "$APPLICATION": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "nodgine",
            "namespace": "",
            "file": "dist\\Controller\\Application.js",
            "line": 1,
            "description": "This is the Application API for the nodgine module",
            "static": 1
        },
        "$LOGGER": {
            "name": "$LOGGER",
            "submodules": {},
            "classes": {
                "$LOGGER": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "nodgine",
            "namespace": "",
            "file": "dist\\Controller\\Logger.js",
            "line": 1,
            "description": "This is the Logger API for the nodgine module",
            "static": 1
        },
        "$ROUTER": {
            "name": "$ROUTER",
            "submodules": {},
            "classes": {
                "$ROUTER": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "nodgine",
            "namespace": "",
            "file": "dist\\Controller\\Router.js",
            "line": 1,
            "description": "This is the Router API for the nodgine module",
            "static": 1
        },
        "$SERVICE": {
            "name": "$SERVICE",
            "submodules": {},
            "classes": {
                "$SERVICE": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "nodgine",
            "namespace": "",
            "file": "dist\\Controller\\Service.js",
            "line": 1,
            "description": "This is the Service API for the nodgine module",
            "static": 1
        }
    },
    "classes": {
        "$APPLICATION": {
            "name": "$APPLICATION",
            "shortname": "$APPLICATION",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nodgine",
            "submodule": "$APPLICATION",
            "namespace": "",
            "file": "dist\\Controller\\Application.js",
            "line": 1,
            "description": "This is the Application API for the nodgine module"
        },
        "$LOGGER": {
            "name": "$LOGGER",
            "shortname": "$LOGGER",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nodgine",
            "submodule": "$LOGGER",
            "namespace": "",
            "file": "dist\\Controller\\Logger.js",
            "line": 1,
            "description": "This is the Logger API for the nodgine module"
        },
        "$ROUTER": {
            "name": "$ROUTER",
            "shortname": "$ROUTER",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nodgine",
            "submodule": "$ROUTER",
            "namespace": "",
            "file": "dist\\Controller\\Router.js",
            "line": 1,
            "description": "This is the Router API for the nodgine module"
        },
        "$SERVICE": {
            "name": "$SERVICE",
            "shortname": "$SERVICE",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nodgine",
            "submodule": "$SERVICE",
            "namespace": "",
            "file": "dist\\Controller\\Service.js",
            "line": 1,
            "description": "This is the Service API for the nodgine module"
        },
        "nodgine": {
            "name": "nodgine",
            "shortname": "nodgine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nodgine",
            "namespace": "",
            "file": "dist\\bootstrap.js",
            "line": 1,
            "description": "This is the bootstrap for the nodgine module",
            "mainName": "",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        }
    },
    "classitems": [
        {
            "file": "dist\\Controller\\Application.js",
            "line": 10,
            "description": "The exporting object, which gets revealed",
            "type": "{object}",
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 17,
            "description": "A reference to the http-module",
            "access": "private",
            "tagname": "",
            "type": "{http}",
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 25,
            "description": "A reference to the https-module",
            "access": "private",
            "tagname": "",
            "type": "{https}",
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 33,
            "description": "A reference to the fs-module",
            "access": "private",
            "tagname": "",
            "type": "{fs}",
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 41,
            "description": "A reference to the path-module",
            "access": "private",
            "tagname": "",
            "type": "{path}",
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 49,
            "description": "A reference to the nodgine-module",
            "access": "private",
            "tagname": "",
            "type": "{$ROUTER}",
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 57,
            "description": "A container, that holds all servers",
            "access": "private",
            "tagname": "",
            "type": "{object}",
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 65,
            "description": "A container, that holds all known javascript classes with there files",
            "access": "private",
            "tagname": "",
            "type": "{object}",
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 73,
            "description": "Starts an HTTP server at given port",
            "itemtype": "method",
            "name": "startHTTP",
            "chainable": 1,
            "params": [
                {
                    "name": "aPort",
                    "description": "Port for HTTP-Server",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the instance itself",
                "type": "Object"
            },
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 95,
            "description": "Starts an HTTPS server at given port with given options",
            "itemtype": "method",
            "name": "startHTTPS",
            "chainable": 1,
            "params": [
                {
                    "name": "aKey",
                    "description": "Path to a key-file",
                    "type": "String"
                },
                {
                    "name": "aCert",
                    "description": "Path to a cert-file",
                    "type": "String"
                },
                {
                    "name": "aPort",
                    "description": "Port for HTTP-Server",
                    "type": "Number"
                },
                {
                    "name": "aOptions",
                    "description": "additional options for the HTTPS-Server",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the instance itself",
                "type": "Object"
            },
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 131,
            "description": "Stops the HTTP-Server, if any is started",
            "itemtype": "method",
            "name": "stopHTTP",
            "chainable": 1,
            "return": {
                "description": "the instance itself",
                "type": "Object"
            },
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 146,
            "description": "Stops the HTTPS-Server, if any is started",
            "itemtype": "method",
            "name": "stopHTTPS",
            "chainable": 1,
            "return": {
                "description": "the instance itself",
                "type": "Object"
            },
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 161,
            "description": "Emit a start event to the application",
            "itemtype": "method",
            "name": "runApplication",
            "chainable": 1,
            "return": {
                "description": "the instance itself",
                "type": "Object"
            },
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 174,
            "description": "Emit a stop event to the application",
            "itemtype": "method",
            "name": "stopApplication",
            "chainable": 1,
            "return": {
                "description": "the instance itself",
                "type": "Object"
            },
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 187,
            "description": "Emit a start event to the application",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "aBasePath",
                    "description": "Path in which the javascript files should be searched for",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a multi-dimensional array with all paths to all found javascript files",
                "type": "Array"
            },
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 221,
            "description": "Adds a loadpath for the load method, where to search for new classes",
            "chainable": 1,
            "itemtype": "method",
            "name": "addLoadPath",
            "params": [
                {
                    "name": "aPath",
                    "description": "Path, where to search for new javascript classes",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the instance itself",
                "type": "Object"
            },
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 259,
            "description": "Searches in all known paths for specified class file and returns it",
            "chainable": 1,
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "aClassName",
                    "description": "The classname, for which the function should search",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The searched class or null",
                "type": "Function | null"
            },
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 278,
            "description": "Returns the http server object for direct interaction, for example if you want to pass it through to a websocket library",
            "itemtype": "method",
            "name": "getHttpServer",
            "return": {
                "description": "",
                "type": "HttpServer | null"
            },
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Application.js",
            "line": 290,
            "description": "Returns the https server object for direct interaction, for example if you want to pass it through to a websocket library",
            "itemtype": "method",
            "name": "getHttpsServer",
            "return": {
                "description": "",
                "type": "HttpsServer | null"
            },
            "class": "$APPLICATION",
            "module": "nodgine",
            "submodule": "$APPLICATION"
        },
        {
            "file": "dist\\Controller\\Logger.js",
            "line": 10,
            "description": "The exporting object, which gets revealed",
            "type": "{object}",
            "class": "$LOGGER",
            "module": "nodgine",
            "submodule": "$LOGGER"
        },
        {
            "file": "dist\\Controller\\Logger.js",
            "line": 17,
            "description": "A reference to the fs-module",
            "access": "private",
            "tagname": "",
            "type": "{mFs}",
            "class": "$LOGGER",
            "module": "nodgine",
            "submodule": "$LOGGER"
        },
        {
            "file": "dist\\Controller\\Logger.js",
            "line": 25,
            "description": "The name of logfile, where to save all logs",
            "access": "private",
            "tagname": "",
            "type": "{string}",
            "default": "'Log.txt'",
            "class": "$LOGGER",
            "module": "nodgine",
            "submodule": "$LOGGER"
        },
        {
            "file": "dist\\Controller\\Logger.js",
            "line": 34,
            "description": "Flag, whether logs should be written to the logfile",
            "access": "private",
            "tagname": "",
            "type": "{boolean}",
            "default": "false",
            "class": "$LOGGER",
            "module": "nodgine",
            "submodule": "$LOGGER"
        },
        {
            "file": "dist\\Controller\\Logger.js",
            "line": 43,
            "description": "Flag, whether logs should be written to console",
            "access": "private",
            "tagname": "",
            "type": "{boolean}",
            "default": "boolean",
            "class": "$LOGGER",
            "module": "nodgine",
            "submodule": "$LOGGER"
        },
        {
            "file": "dist\\Controller\\Logger.js",
            "line": 52,
            "description": "This function generates a readable timestamp of current time for the log",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "readable timestamp of current time",
                "type": "String"
            },
            "class": "$LOGGER",
            "module": "nodgine",
            "submodule": "$LOGGER"
        },
        {
            "file": "dist\\Controller\\Logger.js",
            "line": 71,
            "description": "This is the general function which is connected to all incoming errors to work with them",
            "access": "private",
            "tagname": "",
            "chainable": 1,
            "params": [
                {
                    "name": "aState",
                    "description": "State of given error",
                    "type": "String"
                },
                {
                    "name": "aCritical",
                    "description": "Is critical or not. If it's critical, an error will be thrown",
                    "type": "Boolean"
                },
                {
                    "name": "aMessage",
                    "description": "The message for the log",
                    "type": "String"
                }
            ],
            "class": "$LOGGER",
            "module": "nodgine",
            "submodule": "$LOGGER"
        },
        {
            "file": "dist\\Controller\\Logger.js",
            "line": 102,
            "description": "With this function you can set the log file",
            "chainable": 1,
            "itemtype": "method",
            "name": "setLogFile",
            "params": [
                {
                    "name": "aFilename",
                    "description": "The file, in which logentrys should be written, if writeToFile(true) is set. This path\nshould be absolute",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The instance itself",
                "type": "Object"
            },
            "class": "$LOGGER",
            "module": "nodgine",
            "submodule": "$LOGGER"
        },
        {
            "file": "dist\\Controller\\Logger.js",
            "line": 117,
            "description": "with this function you can set writing to file on or off",
            "chainable": 1,
            "itemtype": "method",
            "name": "writeToFile",
            "params": [
                {
                    "name": "aOption",
                    "description": "Whether or not logentrys should be written to a file",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The instance itself",
                "type": "Object"
            },
            "class": "$LOGGER",
            "module": "nodgine",
            "submodule": "$LOGGER"
        },
        {
            "file": "dist\\Controller\\Logger.js",
            "line": 131,
            "description": "with this function you can set writing to console on or off",
            "chainable": 1,
            "itemtype": "method",
            "name": "writeToConsole",
            "params": [
                {
                    "name": "aOption",
                    "description": "whether or not logentrys should be written to the console",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The instance itself",
                "type": "Object"
            },
            "class": "$LOGGER",
            "module": "nodgine",
            "submodule": "$LOGGER"
        },
        {
            "file": "dist\\Controller\\Logger.js",
            "line": 145,
            "description": "This is the bind function, bind to enterLog",
            "chainable": 1,
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "aMessage",
                    "description": "The message for the log",
                    "type": "String"
                }
            ],
            "class": "$LOGGER",
            "module": "nodgine",
            "submodule": "$LOGGER"
        },
        {
            "file": "dist\\Controller\\Logger.js",
            "line": 154,
            "description": "This is the bind function, bind to enterLog",
            "chainable": 1,
            "itemtype": "method",
            "name": "warning",
            "params": [
                {
                    "name": "aMessage",
                    "description": "The message for the log",
                    "type": "String"
                }
            ],
            "class": "$LOGGER",
            "module": "nodgine",
            "submodule": "$LOGGER"
        },
        {
            "file": "dist\\Controller\\Logger.js",
            "line": 163,
            "description": "This is the bind function, bind to enterLog",
            "chainable": 1,
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "aMessage",
                    "description": "The message for the log",
                    "type": "String"
                }
            ],
            "class": "$LOGGER",
            "module": "nodgine",
            "submodule": "$LOGGER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 10,
            "description": "The exporting object, which gets revealed",
            "type": "{object}",
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 17,
            "description": "A list of all routes",
            "access": "private",
            "tagname": "",
            "type": "{Array}",
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 25,
            "description": "A list of all preprocessors",
            "access": "private",
            "tagname": "",
            "type": "{Array}",
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 33,
            "description": "A list of all postprocessors",
            "access": "private",
            "tagname": "",
            "type": "{Array}",
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 41,
            "description": "A reference to the url-module",
            "access": "private",
            "tagname": "",
            "type": "{url}",
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 49,
            "description": "The requestencoding",
            "access": "private",
            "tagname": "",
            "type": "{string}",
            "default": "'utf8'",
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 58,
            "description": "A reference to the default controller",
            "access": "private",
            "tagname": "",
            "type": "{function}",
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 66,
            "description": "A reference to the request object",
            "access": "private",
            "tagname": "",
            "type": "{function}",
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 74,
            "description": "A reference to the response object",
            "access": "private",
            "tagname": "",
            "type": "{function}",
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 82,
            "description": "A reference to the optimization interval object",
            "access": "private",
            "tagname": "",
            "type": "{Interval}",
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 90,
            "description": "Wrappes an object to a callable function",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "aCallbackObject",
                    "description": "The object, which should be wrapped",
                    "type": "Object"
                },
                {
                    "name": "aRequest",
                    "description": "An nodejs request-object",
                    "type": "Request"
                },
                {
                    "name": "aResponse",
                    "description": "An nodejs response object",
                    "type": "Response"
                },
                {
                    "name": "aArgs",
                    "description": "Arguments, given by called url",
                    "type": "Object"
                }
            ],
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 130,
            "description": "Deletes all routes",
            "chainable": 1,
            "itemtype": "method",
            "name": "clearRoutes",
            "return": {
                "description": "The instance itself",
                "type": "Object"
            },
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 144,
            "description": "Sets the default route controller for all not routeable requests",
            "chainable": 1,
            "itemtype": "method",
            "name": "setDefaultRoute",
            "params": [
                {
                    "name": "aController",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The instance itself",
                "type": "Object"
            },
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 163,
            "description": "Returns the default route controller",
            "itemtype": "method",
            "name": "getDefaultRoute",
            "return": {
                "description": "",
                "type": "Function | null"
            },
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 174,
            "description": "This function generates a route object from given path",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "aPath",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "aSensetive",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "inspired by expressjs (https://github.com/visionmedia/express/blob/master/lib/utils.js) pathRegexp",
                "type": "Object"
            },
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 214,
            "description": "Adds a route to the router with controller as first url param, action as second url param and callback as handle\nfor the request",
            "itemtype": "method",
            "name": "addRoute",
            "chainable": 1,
            "params": [
                {
                    "name": "aPath",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "aCallback",
                    "description": "",
                    "type": "Function | object"
                },
                {
                    "name": "aCaseSensetive",
                    "description": "Optional, false by default",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The instance itself",
                "type": "Object"
            },
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 255,
            "description": "Adds a preprocessor to each request",
            "itemtype": "method",
            "name": "addPreProcessor",
            "chainable": 1,
            "params": [
                {
                    "name": "aPreProcessor",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The instance itself",
                "type": "Object"
            },
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 273,
            "description": "Adds a postprocessor to each request",
            "itemtype": "method",
            "name": "addPostProcessor",
            "chainable": 1,
            "params": [
                {
                    "name": "aPostProcessor",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The instance itself",
                "type": "Object"
            },
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 291,
            "description": "Returns the controller connected to a certain route. If the route wasn't defined it returns 'undefined'",
            "itemtype": "method",
            "name": "getRoute",
            "params": [
                {
                    "name": "aPath",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object | null"
            },
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 316,
            "description": "Set the encoding for the request. If aCheckEncoding is set, the encoding gets validated. Valid encodings are\nutf8, ascii, binary, hex, base64, utf16le and ucs2",
            "itemtype": "method",
            "name": "setEncoding",
            "params": [
                {
                    "name": "aEncoding",
                    "description": "The encoding string",
                    "type": "String"
                },
                {
                    "name": "aCheckEncoding",
                    "description": "Whether to check, if encoding is ok or not",
                    "type": "Boolean"
                }
            ],
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 344,
            "description": "Returns the current encoding for requests",
            "itemtype": "method",
            "name": "getEncoding",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 356,
            "description": "Executes all preprocessors on given request and response",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "aRequest",
                    "description": "",
                    "type": "Request"
                },
                {
                    "name": "aResponse",
                    "description": "",
                    "type": "Response"
                },
                {
                    "name": "aArgs",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "aCallback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 403,
            "description": "Executes all postprocessors on given request and response",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "aRequest",
                    "description": "",
                    "type": "Request"
                },
                {
                    "name": "aResponse",
                    "description": "",
                    "type": "Response"
                },
                {
                    "name": "aArgs",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 439,
            "description": "This function is the routers core function. It gets the request from http or https server, and routes it to the\ncontroller",
            "itemtype": "method",
            "name": "route",
            "params": [
                {
                    "name": "aRequest",
                    "description": "An nodejs request",
                    "type": "Request"
                },
                {
                    "name": "aResponse",
                    "description": "An nodejs response",
                    "type": "Response"
                }
            ],
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 522,
            "description": "Sorting the route objects descending",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "aFirst",
                    "description": "",
                    "type": "Route-Object"
                },
                {
                    "name": "aSecond",
                    "description": "",
                    "type": "Route-Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 536,
            "description": "Opimizes the mRoutes array",
            "access": "private",
            "tagname": "",
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Router.js",
            "line": 553,
            "description": "Sets or unsets an optimization interval (0 = unset, larger than 0 the time in milliseconds between the executions)",
            "itemtype": "method",
            "name": "setOptimizeInterval",
            "params": [
                {
                    "name": "aIntervalTime",
                    "description": "Time between optimizings in milliseconds",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "$ROUTER",
            "module": "nodgine",
            "submodule": "$ROUTER"
        },
        {
            "file": "dist\\Controller\\Service.js",
            "line": 10,
            "description": "The exporting object, which gets revealed",
            "type": "{object}",
            "class": "$SERVICE",
            "module": "nodgine",
            "submodule": "$SERVICE"
        },
        {
            "file": "dist\\Controller\\Service.js",
            "line": 17,
            "description": "A list of all registered services",
            "access": "private",
            "tagname": "",
            "type": "{Array}",
            "class": "$SERVICE",
            "module": "nodgine",
            "submodule": "$SERVICE"
        },
        {
            "file": "dist\\Controller\\Service.js",
            "line": 25,
            "itemtype": "event",
            "name": "servicesCleared",
            "class": "$SERVICE",
            "module": "nodgine",
            "submodule": "$SERVICE"
        },
        {
            "file": "dist\\Controller\\Service.js",
            "line": 28,
            "description": "deletes all registered services",
            "chainable": 1,
            "itemtype": "method",
            "name": "clearServices",
            "return": {
                "description": "The instance itself",
                "type": "Object"
            },
            "class": "$SERVICE",
            "module": "nodgine",
            "submodule": "$SERVICE"
        },
        {
            "file": "dist\\Controller\\Service.js",
            "line": 42,
            "description": "Returns all services with the given type in an array",
            "itemtype": "method",
            "name": "getServicesByType",
            "params": [
                {
                    "name": "aType",
                    "description": "Name of the searched type",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An array containing all matched services as object. The object looks like:\n     {type: string, controller: function|object, id: number}",
                "type": "Array"
            },
            "class": "$SERVICE",
            "module": "nodgine",
            "submodule": "$SERVICE"
        },
        {
            "file": "dist\\Controller\\Service.js",
            "line": 70,
            "description": "Returns the service-controller connected to given id",
            "itemtype": "method",
            "name": "getServiceById",
            "params": [
                {
                    "name": "aId",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Function | object | undefined"
            },
            "class": "$SERVICE",
            "module": "nodgine",
            "submodule": "$SERVICE"
        },
        {
            "file": "dist\\Controller\\Service.js",
            "line": 85,
            "itemtype": "event",
            "name": "serviceRegistered",
            "params": [
                {
                    "name": "serviceType",
                    "description": "the type of the new serice",
                    "type": "String"
                },
                {
                    "name": "serviceId",
                    "description": "the id of the new serice",
                    "type": "String"
                }
            ],
            "class": "$SERVICE",
            "module": "nodgine",
            "submodule": "$SERVICE"
        },
        {
            "file": "dist\\Controller\\Service.js",
            "line": 90,
            "description": "Registers given controller as new service from given type, returns the generated id",
            "itemtype": "method",
            "name": "registerService",
            "params": [
                {
                    "name": "aId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "aType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "aController",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The instance itself",
                "type": "Object"
            },
            "class": "$SERVICE",
            "module": "nodgine",
            "submodule": "$SERVICE"
        },
        {
            "file": "dist\\Controller\\Service.js",
            "line": 128,
            "itemtype": "event",
            "name": "serviceUnregistered",
            "params": [
                {
                    "name": "serviceType",
                    "description": "the type of the new serice",
                    "type": "String"
                },
                {
                    "name": "serviceId",
                    "description": "the id of the new serice",
                    "type": "Number"
                }
            ],
            "class": "$SERVICE",
            "module": "nodgine",
            "submodule": "$SERVICE"
        },
        {
            "file": "dist\\Controller\\Service.js",
            "line": 133,
            "description": "Unregisters the service with given id",
            "itemtype": "method",
            "name": "unregisterService",
            "params": [
                {
                    "name": "aId",
                    "description": "ID of service, that should be unregistered",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This instance itself",
                "type": "Object"
            },
            "class": "$SERVICE",
            "module": "nodgine",
            "submodule": "$SERVICE"
        },
        {
            "file": "dist\\bootstrap.js",
            "line": 10,
            "description": "The exporting object, which gets revealed",
            "type": "{object}",
            "class": "nodgine",
            "module": "nodgine"
        },
        {
            "file": "dist\\bootstrap.js",
            "line": 17,
            "description": "A reference to the fs-module",
            "access": "private",
            "tagname": "",
            "type": "{path}",
            "class": "nodgine",
            "module": "nodgine"
        },
        {
            "file": "dist\\bootstrap.js",
            "line": 24,
            "description": "A reference to the path-module",
            "access": "private",
            "tagname": "",
            "type": "{fs}",
            "class": "nodgine",
            "module": "nodgine"
        },
        {
            "file": "dist\\bootstrap.js",
            "line": 32,
            "description": "This function makes the APIs of this framework global",
            "itemtype": "method",
            "name": "globalize",
            "class": "nodgine",
            "module": "nodgine"
        },
        {
            "file": "dist\\bootstrap.js",
            "line": 55,
            "description": "This function loads given json-file and parses and evalutates it",
            "itemtype": "method",
            "name": "loadFromFile",
            "params": [
                {
                    "name": "aFile",
                    "description": "Path to file that should be evaluated",
                    "type": "String"
                }
            ],
            "class": "nodgine",
            "module": "nodgine"
        },
        {
            "file": "dist\\bootstrap.js",
            "line": 141,
            "description": "An instance of $APPLICATION",
            "itemtype": "property",
            "name": "$APPLICATION",
            "type": "{$APPLICATION}",
            "class": "nodgine",
            "module": "nodgine"
        },
        {
            "file": "dist\\bootstrap.js",
            "line": 151,
            "description": "An instance of $ROUTER",
            "itemtype": "property",
            "name": "$ROUTER",
            "type": "{$ROUTER}",
            "class": "nodgine",
            "module": "nodgine"
        },
        {
            "file": "dist\\bootstrap.js",
            "line": 161,
            "description": "An instance of $LOGGER",
            "itemtype": "property",
            "name": "$LOGGER",
            "type": "{$LOGGER}",
            "class": "nodgine",
            "module": "nodgine"
        },
        {
            "file": "dist\\bootstrap.js",
            "line": 171,
            "description": "An instance of $SERVICE",
            "itemtype": "property",
            "name": "$SERVICE",
            "type": "{$SERVICE}",
            "class": "nodgine",
            "module": "nodgine"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist\\Controller\\Router.js:522"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist\\Controller\\Service.js:70"
        },
        {
            "message": "Missing item type\nThe exporting object, which gets revealed",
            "line": " dist\\Controller\\Application.js:10"
        },
        {
            "message": "Missing item type\nA reference to the http-module",
            "line": " dist\\Controller\\Application.js:17"
        },
        {
            "message": "Missing item type\nA reference to the https-module",
            "line": " dist\\Controller\\Application.js:25"
        },
        {
            "message": "Missing item type\nA reference to the fs-module",
            "line": " dist\\Controller\\Application.js:33"
        },
        {
            "message": "Missing item type\nA reference to the path-module",
            "line": " dist\\Controller\\Application.js:41"
        },
        {
            "message": "Missing item type\nA reference to the nodgine-module",
            "line": " dist\\Controller\\Application.js:49"
        },
        {
            "message": "Missing item type\nA container, that holds all servers",
            "line": " dist\\Controller\\Application.js:57"
        },
        {
            "message": "Missing item type\nA container, that holds all known javascript classes with there files",
            "line": " dist\\Controller\\Application.js:65"
        },
        {
            "message": "Missing item type\nEmit a start event to the application",
            "line": " dist\\Controller\\Application.js:187"
        },
        {
            "message": "Missing item type\nThe exporting object, which gets revealed",
            "line": " dist\\Controller\\Logger.js:10"
        },
        {
            "message": "Missing item type\nA reference to the fs-module",
            "line": " dist\\Controller\\Logger.js:17"
        },
        {
            "message": "Missing item type\nThe name of logfile, where to save all logs",
            "line": " dist\\Controller\\Logger.js:25"
        },
        {
            "message": "Missing item type\nFlag, whether logs should be written to the logfile",
            "line": " dist\\Controller\\Logger.js:34"
        },
        {
            "message": "Missing item type\nFlag, whether logs should be written to console",
            "line": " dist\\Controller\\Logger.js:43"
        },
        {
            "message": "Missing item type\nThis function generates a readable timestamp of current time for the log",
            "line": " dist\\Controller\\Logger.js:52"
        },
        {
            "message": "Missing item type\nThis is the general function which is connected to all incoming errors to work with them",
            "line": " dist\\Controller\\Logger.js:71"
        },
        {
            "message": "Missing item type\nThe exporting object, which gets revealed",
            "line": " dist\\Controller\\Router.js:10"
        },
        {
            "message": "Missing item type\nA list of all routes",
            "line": " dist\\Controller\\Router.js:17"
        },
        {
            "message": "Missing item type\nA list of all preprocessors",
            "line": " dist\\Controller\\Router.js:25"
        },
        {
            "message": "Missing item type\nA list of all postprocessors",
            "line": " dist\\Controller\\Router.js:33"
        },
        {
            "message": "Missing item type\nA reference to the url-module",
            "line": " dist\\Controller\\Router.js:41"
        },
        {
            "message": "Missing item type\nThe requestencoding",
            "line": " dist\\Controller\\Router.js:49"
        },
        {
            "message": "Missing item type\nA reference to the default controller",
            "line": " dist\\Controller\\Router.js:58"
        },
        {
            "message": "Missing item type\nA reference to the request object",
            "line": " dist\\Controller\\Router.js:66"
        },
        {
            "message": "Missing item type\nA reference to the response object",
            "line": " dist\\Controller\\Router.js:74"
        },
        {
            "message": "Missing item type\nA reference to the optimization interval object",
            "line": " dist\\Controller\\Router.js:82"
        },
        {
            "message": "Missing item type\nWrappes an object to a callable function",
            "line": " dist\\Controller\\Router.js:90"
        },
        {
            "message": "Missing item type\nThis function generates a route object from given path",
            "line": " dist\\Controller\\Router.js:174"
        },
        {
            "message": "Missing item type\nExecutes all preprocessors on given request and response",
            "line": " dist\\Controller\\Router.js:356"
        },
        {
            "message": "Missing item type\nExecutes all postprocessors on given request and response",
            "line": " dist\\Controller\\Router.js:403"
        },
        {
            "message": "Missing item type\nSorting the route objects descending",
            "line": " dist\\Controller\\Router.js:522"
        },
        {
            "message": "Missing item type\nOpimizes the mRoutes array",
            "line": " dist\\Controller\\Router.js:536"
        },
        {
            "message": "Missing item type\nThe exporting object, which gets revealed",
            "line": " dist\\Controller\\Service.js:10"
        },
        {
            "message": "Missing item type\nA list of all registered services",
            "line": " dist\\Controller\\Service.js:17"
        },
        {
            "message": "Missing item type\nThe exporting object, which gets revealed",
            "line": " dist\\bootstrap.js:10"
        },
        {
            "message": "Missing item type\nA reference to the fs-module",
            "line": " dist\\bootstrap.js:17"
        },
        {
            "message": "Missing item type\nA reference to the path-module",
            "line": " dist\\bootstrap.js:24"
        }
    ]
}